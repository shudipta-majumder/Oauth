# Generated by Django 5.0.6 on 2024-08-21 12:35

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationOfAward",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "noa_status",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="NOA status"
                    ),
                ),
                (
                    "noa_attachment",
                    models.FileField(blank=True, null=True, upload_to="noa/"),
                ),
                ("noa_receiving_date", models.DateField(blank=True, null=True)),
                (
                    "noa_accept_input_day",
                    models.CharField(blank=True, default=0, max_length=255, null=True),
                ),
                ("noa_acceptance_deadline", models.DateField(blank=True, null=True)),
                (
                    "contract_aggrement_input_day",
                    models.CharField(blank=True, default=0, max_length=255, null=True),
                ),
                (
                    "contract_agreement_deadline",
                    models.DateField(blank=True, null=True),
                ),
                ("pg_amount", models.CharField(blank=True, max_length=255, null=True)),
                ("pg_issue_date", models.DateField(blank=True, null=True)),
                (
                    "pg_attachment",
                    models.FileField(blank=True, null=True, upload_to="pg/"),
                ),
                ("pg_validity_date", models.DateField(blank=True, null=True)),
                (
                    "is_bg_released",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("bg_released_date", models.DateField(blank=True, null=True)),
                ("earliest_bg_released_date", models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Participant",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Participant Name",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ministry",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("ministry_name", models.CharField(max_length=100)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ContractAgreement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "contract_agreement_attch",
                    models.FileField(blank=True, null=True, upload_to="contracts/"),
                ),
                (
                    "contract_agreement_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "delivery_deadline_input_days",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("delivery_deadline", models.DateTimeField(blank=True, null=True)),
                (
                    "traning_installation",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("delivery_start_date", models.DateField(blank=True, null=True)),
                ("delivery_complition_date", models.DateField(blank=True, null=True)),
                (
                    "is_tender_complete",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "completion_certificate",
                    models.FileField(blank=True, null=True, upload_to="certificates/"),
                ),
                ("is_pg_released", models.CharField(default=False, max_length=100)),
                ("pg_released_date", models.DateField(blank=True, null=True)),
                ("earliest_pg_released_date", models.DateField(blank=True, null=True)),
                (
                    "noa",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tms.notificationofaward",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "payment_amount",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "payment_attachment",
                    models.FileField(blank=True, null=True, upload_to="payments/"),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment",
                        to="tms.contractagreement",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "product_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "product_brand",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "model_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("warranty", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "product_qty",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("required_specification", models.TextField(blank=True, null=True)),
                ("walton_specification", models.TextField(blank=True, null=True)),
                ("competitor_specification", models.TextField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductSpacification",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "spacification_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "required_spacification",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "walton_spacification",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Walton Offered Spacification",
                    ),
                ),
                (
                    "compettitors_spacification",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Compettitors Offered Spacification",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_spacification",
                        to="tms.product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("team_name", models.CharField(max_length=100)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Tender",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tender_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Tender ID/Ref"
                    ),
                ),
                ("is_open", models.BooleanField(default=True)),
                ("kam_name", models.CharField(max_length=255)),
                ("tender_description", models.TextField()),
                (
                    "procuring_entity",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("bg_amount", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "bg_attachment",
                    models.FileField(blank=True, null=True, upload_to="tenders/"),
                ),
                ("bg_issue_date", models.DateField(blank=True, null=True)),
                (
                    "tender_budget_lower_per",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tender_budget_lower",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tender_budget_upper_per",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "tender_budget_upper",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("pretender_meeting_date", models.DateTimeField(blank=True, null=True)),
                (
                    "attend_pre_tender_meeting",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "pretender_meeting_attachment",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="pretender_meeting_attachments/",
                    ),
                ),
                (
                    "has_external_application",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "external_application_attach",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="external_application_attachments/",
                    ),
                ),
                (
                    "is_tender_submitted",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "technical_compliance_sheet",
                    models.FileField(
                        blank=True, null=True, upload_to="technical_compliance_sheet/"
                    ),
                ),
                ("result", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "biding_price_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "biding_price_national",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "biding_price_international",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("reason", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ministry",
                    models.ForeignKey(
                        blank=True,
                        max_length=255,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tms.ministry",
                    ),
                ),
                (
                    "team_name",
                    models.ForeignKey(
                        max_length=255,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tms.team",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="product",
            name="tender",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="tms.tender",
            ),
        ),
        migrations.CreateModel(
            name="ParticipantBid",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "bidinng_price",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "participant_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tms.participant",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participant_bid",
                        to="tms.tender",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="notificationofaward",
            name="tender",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="noa",
                to="tms.tender",
            ),
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tender_id_ref",
                    models.CharField(blank=True, max_length=100, null=None),
                ),
                ("team_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "tender_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("deadline", models.DateField(blank=True, null=True)),
                ("remaining_time", models.DurationField(blank=True, null=True)),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("BG VALIDITY DATE", "BG VALIDITY DATE"),
                            ("PG VALIDITY DATE", "PG VALIDITY DATE"),
                            ("NOA ACCEPTANCE DEADLINE", "NOA ACCEPTANCE DEADLINE"),
                            (
                                "CONTRACT AGREEMENT DEADLINE",
                                "CONTRACT AGREEMENT DEADLINE",
                            ),
                            ("COMPLETION CERTIFICATE", "COMPLETION CERTIFICATE"),
                            ("DELIVERY DEADLINE", "DELIVERY DEADLINE"),
                        ],
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tms.tender"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="contractagreement",
            name="tender",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="contract_agreement",
                to="tms.tender",
            ),
        ),
        migrations.CreateModel(
            name="BGValidityDate",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("bg_valid_date", models.DateField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tender",
                    models.ForeignKey(
                        max_length=255,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bg_valid_dates",
                        to="tms.tender",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TenderSubmissionTimeStamps",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("submission_date", models.DateTimeField(blank=True, null=True)),
                (
                    "tender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tender_submission_timestamp",
                        to="tms.tender",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TenderType",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("type_name", models.CharField(max_length=100)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_by_%(class)s_related",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="tender",
            name="tender_type",
            field=models.ForeignKey(
                max_length=255,
                on_delete=django.db.models.deletion.CASCADE,
                to="tms.tendertype",
            ),
        ),
        migrations.CreateModel(
            name="Vendor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "vendor_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "vendor_attachment",
                    models.FileField(blank=True, null=True, upload_to="vendor/"),
                ),
                (
                    "contract",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vendor",
                        to="tms.contractagreement",
                    ),
                ),
            ],
        ),
    ]
