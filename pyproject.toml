[tool.poetry]
name = "digi-partner-api"
version = "0.0.1"
description = "An API project for Digital Partner"
authors = ["jiaulislam <jiaulislam.ict.bd@gmail.com>"]
readme = "README.md"
packages = [
    {include= "core"},
]

[tool.poetry.dependencies]
python = "^3.10"
django = "^5.0.6"
django-cors-headers = "^4.3.0"
djangorestframework = "^3.14.0"
pillow = "^10.1.0"
drf-spectacular = "^0.27.1"
python-decouple = "^3.8"
requests = "^2.32.3"
django-simple-history = "^3.7.0"
whitenoise = "^6.6.0"
djangorestframework-camel-case = "^1.4.2"
django-oauth-toolkit = "^2.4.0"
gunicorn = "^22.0.0"
channels = {extras = ["daphne"], version = "^4.0.0"}
celery = "^5.3.6"
redis = "^5.0.2"
django-celery-results = "^2.5.1"
httpx = "^0.27.0"
psycopg = {extras = ["binary"], version = "^3.1.19"}
django-viewflow = "2.0.2"
oracledb = "^2.2.1"
django-filter = "^24.2"
drf-writable-nested = "^0.7.0"
python-dateutil = "^2.9.0.post0"
django-celery-beat = "^2.7.0"


[tool.poetry.group.dev.dependencies]
devtools = "^0.12.2"
ruff = "^0.4.7"
black = "^24.4.2"
pre-commit = "^3.7.1"
ipython = "^8.25.0"
django-extensions = "^3.2.3"
poetry-plugin-export = "^1.8.0"


[tool.poetry.group.testing.dependencies]
pytest = "^8.2.1"
pytest-django = "^4.5.2"
pytest-factoryboy = "^2.6.0"
coverage = "^7.5.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 88
target-version = ['py310']


[tool.isort]
atomic = true
profile = "black"
line_length = 88
skip_gitignore = true
skip_glob = ["tests/data", "profiling"]
known-third-party = [
    "django",
    "django-cors-headers",
    "djangorestframework",
    "djangorestframework-simplejwt",
    "django-userforeignkey",
    "pillow",
    "drf-spectacular",
    "requests",
    "python-decouple",
    "django-oauth-toolkit",
    "djangorestframework-camel-case",
    "django-simple-history",
    "celery",
    "redis",
    "django-celery-results",
    "channels",
    "whitenoise",
    "oracledb",
    "django-viewflow"
]


[tool.ruff]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "N", # pep8-naming
    "T20", # flake8-print
]

ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

extend-exclude = [".pyenv", ".vscode", "/usr/**"]
